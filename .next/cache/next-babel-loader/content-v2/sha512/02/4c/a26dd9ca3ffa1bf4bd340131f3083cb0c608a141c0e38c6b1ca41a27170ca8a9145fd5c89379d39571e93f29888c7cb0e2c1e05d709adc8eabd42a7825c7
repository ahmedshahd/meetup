{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zalouma/Desktop/Projects/meet-up/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupDate.image,\n    title: props.meetupDate.title,\n    address: props.meetupDate.address,\n    description: props.meetupDate.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/zalouma/Desktop/Projects/meet-up/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupDate","image","title","address","description"],"mappings":";;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMN,a;;AAkDN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupDate.image}\n      title={props.meetupDate.title}\n      address={props.meetupDate.address}\n      description={props.meetupDate.description}\n    />\n  );\n};\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ahmed:1234@cluster0.eebz1.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const { meetupId } = context.params;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ahmed:1234@cluster0.eebz1.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection\n    .find({ _id: ObjectId(meetupId) })\n    .toArray();\n  client.close();\n  return {\n    props: {\n      meetupDate: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n      },\n    },\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}